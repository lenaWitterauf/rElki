% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/outlier_lof.R
\name{kdeos}
\alias{kdeos}
\title{KDEOS  Outlier score calculation.}
\usage{
kdeos(data_matrix, k_min, k_max = k_min, kernel_scale = NA,
  min_bandwidth = NA, idim = NA)
}
\arguments{
\item{data_matrix}{numeric Matrix containing data the outlier score is
calculated for. Rows are treated as observations, columns as features.}

\item{k_min}{Number. Minimum Neighbourhood-size used to calculate outlier scores.}

\item{k_max}{Number. Maximum Neighbourhood-size used to calculate outlier scores. Defaults to k_min}

\item{kernel_scale}{Number. Kernel scaling parameter. If NA, ELKI's default is used (0.25).}

\item{min_bandwidth}{Number. Minimum bandwidth for kernel density estimation. If NA, ELKI's default is used (0).}

\item{idim}{Number. Intrinsic dimensionality of this data set. If NA, ELKI's default is used (-1, implies using true data dimensionality).}
}
\value{
List of outlier scores. The score at position x belongs to the
  observation given in row x of the original data_matrix.
}
\description{
\code{kdeos} returns the KDEOF Outlier score for every observation in the given
data_matrix. Kernel density estimation in
combination with LOF is used to calculate outlier score.
}
\examples{
data_matrix <- matrix(c(1:30), nrow=10, ncol=3)
result      <- kdeos(data_matrix, 3)
for(index in c(1:10)) {
    print(paste('Observation:', paste(data_matrix[index,], collapse=',')))
    print(paste('Score:',       result[index]))
}


}
\seealso{
\url{https://elki-project.github.io/releases/release0.7.5/javadoc/de/lmu/ifi/dbs/elki/algorithm/outlier/lof/KDEOS.html}
for ELKI documentation.
}
